AWSTemplateFormatVersion: "2010-09-09"
Description: |
  CloudFormation Template for Nagios on EC2.
Parameters:
  NagiosPassword:
    AllowedPattern: '^[A-Za-z][a-zA-Z0-9@%$_-]{8,41}$'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: The WordPress database admin account password
    MaxLength: '41'
    MinLength: '8'
    Default: 'nagiosadmin'
    Type: String
  Email:
    Description: The WordPress database admin account password
    MaxLength: '41'
    MinLength: '8'
    Default: 'drmehmet510@gmail.com'
    Type: String 
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.small
      - t2.micro
      - m1.small
      - m1.medium
      - m1.large
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0c94855ba95c71c99
    us-east-2:
      AMI: ami-0603cbe34fd08cb81
    us-west-1:
      AMI: ami-0e65ed16c9bf1abc7
    us-west-2:
      AMI: ami-0841edc20334f9287
    eu-west-1:
      AMI: ami-08a2aed6e0a6f9c7d
Resources:
  NagiosServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 'Nagios Access Security Group'
      GroupDescription: 'Nagios Access Security Group'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '5666'
          ToPort: '5666'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: Server RulesInbound

  NagiosServer:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: nagios-server
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          #disable selinux
          sudo sed -i 's/enforcing/disabled/g' /etc/selinux/config
          #config hostname
          hostname nagios
          echo "nagios" >/etc/hostname
          yum update -y
          yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
          rpm -Uvh https://repo.nagios.com/nagios/8/nagios-repo-8-1.el8.noarch.rpm
          yum update
          yum install epel-release -y
          subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms
          yum install ncpa -y

          # configure awscli
          yum install -y awscli
          /usr/bin/easy_install --script-dir /opt/aws/bin https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
          cp -v /usr/lib/python2*/site-packages/aws_cfn_bootstrap*/init/redhat/cfn-hup /etc/init.d
          chmod +x /etc/init.d/cfn-hup
          #installing nagionxi
          cd /tmp/ 
          yum install -y wget
          wget http://assets.nagios.com/downloads/nagiosxi/xi-latest.tar.gz 
          tar -zxf xi-latest.tar.gz
          cd /tmp/nagiosxi/ &
          ./fullinstall -n

      KeyName: !Ref KeyName
      ImageId: ami-0b0af3577fe5e3532
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !GetAtt NagiosServerSecurityGroup.GroupId
  

Outputs:
  IPNagiosXI:
    Description: Nagios XI IP
    Value: !Join [ "", [ 'http://',!GetAtt NagiosServer.PublicIp, '/nagios/' ]]
